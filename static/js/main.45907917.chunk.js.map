{"version":3,"sources":["components/TransactionList.js","components/TransactionForm.js","components/Valute.js","components/App.js","serviceWorker.js","index.js"],"names":["TransactionList","props","sumTrans","parseFloat","maxTrans","maxTransName","className","listTrans","map","event","index","costTrans","name","length","toFixed","actualyValute","plnCost","key","onClick","delOneTrans","delAllTrans","TransactionForm","onSubmit","addTrans","bind","this","id","maxLength","type","placeholder","value","actualValueInput","onChange","changeValueInput","Valute","defValute","href","backValute","changeValute","App","e","preventDefault","currentTarget","Form_Name","Form_Cost","validationName","document","querySelector","validationCost","formNameInput","formCostInput","style","display","innerHTML","charAt","obj","state","push","setState","actualValueInputCost","done_trans","setTimeout","finishDoneForm","splice","numb","reg","match","actualValueInputValute","newValuteValue","validation","valuteValueInput","valute","color","addDone","axios","get","then","res","data","rates","mid","catch","console","log","React","Component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.45907917.chunk.js","sourcesContent":["import React from 'react';\nimport './style/TransactionList.css';\n\nfunction TransactionList(props) {\n  let sumTrans = 0;\n  sumTrans = parseFloat(sumTrans);\n  let maxTrans = 0;\n  maxTrans = parseFloat(maxTrans);\n  let maxTransName = \"BRAK TRANSAKCJI\";\n  return (\n    <div className=\"TransactionList\">\n      <span> NAJWYÅ»SZA AKTUALNA TRANSAKCJA:</span><br/>\n      <div className=\"highestTrans\">\n      {props.listTrans.map((event,index) =>{\n        if(event.costTrans > maxTrans){\n          maxTrans = event.costTrans\n          maxTransName= event.name\n        }\n        return(null)\n      })} \n     { (props.listTrans.length >0) ?\n           <table className=\"TableOneItem\">\n           <tbody>\n             <tr>\n               <th className=\"TableOneItem__Title highestTrans_NameTitle\">NAZWA</th>\n               <th className=\"TableOneItem__Title highestTrans_EURTitle\"> KWOTA EUR</th>\n               <th className=\"TableOneItem__Title highestTrans_PLNTitle\"> KWOTA PLN</th>\n             </tr>\n             <tr>\n               <td className=\"TableOneItem__Value highestTrans_Name\">{maxTransName}</td>\n               <td className=\"TableOneItem__Value highestTrans_EUR\"> {parseFloat(maxTrans).toFixed(2)}</td>\n               <td className=\"TableOneItem__Value highestTrans_PLN\"> {(parseFloat(maxTrans)*props.actualyValute).toFixed(2)}</td>\n             </tr>\n           </tbody>\n         </table>:\n         <span> BRAK TRANSAKCJI</span>\n     }\n      </div>   \n      <span>LISTA TRANSAKCJI:</span>  \n      <div className=\"TransactionList_ValueBox\">  \n        <table className=\"TableOneItem\">\n          <tbody>\n              <tr className=\"TableOneItem__AllTitle\">\n                <th className=\"TableOneItem__Title TableOneItem__TitleName\">NAZWA</th>\n                <th className=\"TableOneItem__Title TableOneItem__TitleCost\">KWOTA EUR</th>\n                <th className=\"TableOneItem__Title TableOneItem__TitleCost\">KWOTA PLN</th>\n                <th className=\"TableOneItem__Title TableOneItem__TitleDel\"> USUÅ </th>\n              </tr>\n            {props.listTrans.map((event,index) =>{\n              sumTrans = sumTrans + parseFloat(event.costTrans)\n              let plnCost = parseFloat(event.costTrans)*props.actualyValute;\n              plnCost = plnCost.toFixed(2)\n              event.costTrans= parseFloat(event.costTrans).toFixed(2)\n              return(\n                <tr key={index}>\n                <td className=\"TableOneItem__Value TableOneItem__Name\">{event.name}</td>\n                <td className=\"TableOneItem__Value TableOneItem__CostEUR\"> {event.costTrans}</td>\n                <td className=\"TableOneItem__Value TableOneItem__CostPLN\">{plnCost}</td>\n                <td className=\"TableOneItem__Value\"><button className=\"TableOneItem__Delete\" onClick={()=>{props.delOneTrans(index)}}>USUÅ</button></td>\n                </tr>\n              )})}\n          </tbody>\n        </table>\n      </div>\n      <div className=\"Sum__Box\">\n      <span> SUMA TRANSAKCJI:</span>\n      <div className=\"Sum_TableBox\"> \n        <table className=\"Sum_Table\">\n          <tbody>\n            <tr>\n                <th className=\"TableOneItem__Title TitleSum__Title\">SUMA W EUR</th>\n                <th className=\"TableOneItem__Title TitleSum__Title\">SUMA W PLN</th>\n                <th className=\"TableOneItem__Title TitleDel__Title\">USUÅ WSZYSTKO </th>\n              </tr>     \n              <tr>\n                <td className=\"Sum__Trans\">{sumTrans.toFixed(2)}</td>\n                <td className=\"Sum__Trans\">{(sumTrans*props.actualyValute).toFixed(2)}</td>\n               <td><button className=\"Button__DeleteAll\" onClick={props.delAllTrans}>USUÅ</button></td> \n              </tr>\n          </tbody>\n        </table>\n      </div>\n     </div>\n    </div>\n  );\n}\n\nexport default TransactionList;\n","import React from 'react';\nimport './style/TransactionForm.css';\n\n\nfunction TransactionForm(props) {\n  return (\n    <div className=\"TransactionForm\">\n      <div className=\"TransactionForm__Body\">\n     <p className=\"TransactionForm__Title\">DODAJ TRANSAKCJE:</p>\n     <div className=\"TransactionForm__Box\">\n      <form onSubmit={props.addTrans.bind(this)} className=\"TransactionForm__Form\">\n          <div className=\"TransactionForm__NameBox\">\n            <span className=\"TransactionForm__Spans\">Nazwa transakcji:</span>\n            <input id=\"Form_Name\" className=\"TransactionForm__Name TransactionForm__Inputs\" maxLength=\"25\" type=\"text\" placeholder=\"opÅata za...\"/>\n            <div className=\"TransactionForm__NameValidation\">\n                <span className=\"Validation TransactionForm__NameValidationSpan\">PODAJ NAZWÄ TRANSAKCJI !!</span>\n              </div>\n          </div>\n        <div className=\"TransactionForm__CostBox\">\n        <label className=\"TransactionForm__Spans\">Kwota transakcji: </label>\n        <input id=\"Form_Cost\" className=\"TransactionForm__Cost TransactionForm__Inputs\" placeholder=\"00.00 EUR\" value={props.actualValueInput} onChange={props.changeValueInput.bind(this,2)}/>\n        <div className=\"TransactionForm__CostValidation\">\n            <div className=\" Validation TransactionForm__CostValidationSpan\">PODAJ KWOTE TRANSAKCJI !!</div>\n          </div>\n        </div> \n        <div>\n        <p id=\"Done__Transaction\" className=\"Validation__Done\">POMYÅLNIE DODANO TRANSAKCJE !</p>  \n        </div>\n        <input className=\"TransactionForm__Button TransactionForm__Inputs\" type=\"submit\"  value=\"Dodaj transakcje\"/>\n      </form>\n     </div>\n     </div>\n    </div>\n  );\n}\n\nexport default TransactionForm;\n","import React from 'react';\nimport './style/Valute.css';\n\nfunction Valute(props) {\n  return (\n    <>\n    <div className=\"Valute__BankValute\">\n    <p className=\"Valute__ActualValute\"> AKTUALNY  KURS EURO WYNOSI : 1 EUR =  {props.actualyValute} PLN</p>\n    <p className=\"Valute_ActualyValuteValue\"> ( aktualny kurs wedÅug  NBP wynosi 1 EUR = {props.defValute} PLN) <button className=\"Back_defValute\" href=\"\"  onClick={props.backValute}>przywrÃ³Ä ten kurs</button></p>\n    </div>\n    <div className=\"Valute\">\n      <div className=\"Valute__Body\">\n        <p className=\"Valute__Form\"> ZMIEÅ KURS EURO</p>\n        <div className=\"Valute__Box\">\n          <div className=\"Valute__ActualyValute\">\n            <span>1 EUR =</span>\n            <input id=\"ValuteValue\" value={props.actualValueInput} onChange={props.changeValueInput.bind(this,1)} placeholder={props.actualyValute} /> \n            <span>PLN</span>\n          </div>\n          <div>\n            <span className=\"Valute__Validation Validation\"> PODAJ WARTOSC WALUTY !!</span>\n          </div>\n          <div className=\"Valute__ButtonBox\">\n            <input type=\"button\" onClick={props.changeValute} className=\"Valute__ButtonChange\" value=\"zmieÅ walute\"/> \n          </div>\n        </div>\n      </div>\n    </div>\n    </>\n  );\n}\n\nexport default Valute;\n","import React from 'react';\nimport './style/App.css';\nimport TransactionList from './TransactionList';\nimport TransactionForm from './TransactionForm';\nimport Valute from './Valute';\nimport axios from \"axios\";\n\nclass App extends React.Component {\n  constructor(){\n    super();\n    this.state ={\n      valute: 1,\n      defValute: 0,\n      listTrans: [],\n      actualValueInputValute: '',\n      actualValueInputCost: ''\n    }\n}\n  componentDidMount(){\n    axios.get('http://api.nbp.pl/api/exchangerates/rates/A/EUR/').then(\n          (res)=>{\n            this.setState({\n              defValute: parseFloat(res.data.rates[0].mid),\n              valute: parseFloat(res.data.rates[0].mid)\n            })\n          }).catch(()=>{\n            console.log(\"Problem z pobaniem danych\");\n          })\n  }\n\n  addTrans = (e) => {\n      e.preventDefault() \n      const name = e.currentTarget.Form_Name.value;\n      const costTrans = e.currentTarget.Form_Cost.value;\n      const validationName = document.querySelector('.TransactionForm__NameValidationSpan');\n      const validationCost = document.querySelector('.TransactionForm__CostValidationSpan');\n      const formNameInput = document.querySelector('#Form_Name');\n      const formCostInput = document.querySelector('#Form_Cost');\n\n        if(name.length === 0){\n          if(costTrans.length !== 0 && costTrans !== '.' ){\n            validationCost.style.display='none';\n            formCostInput.style= \"border-color:var(--border-color)\";\n          }else{\n            validationCost.style.display='block';\n            formCostInput.style= \"border-color:var(--validation-color);\";\n          }\n          validationName.innerHTML = \" PODAJ NAZWÄ TRANSAKCJI\";\n          validationName.style.display='block';\n          formNameInput.style= \"border-color:var(--validation-color);\";\n          \n          if(costTrans.length === 0){\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\n              validationName.style.display='none';\n              formNameInput.style= \"border-color:var(--validation-color)\";\n            }\n            validationCost.innerHTML = \"PODAJ KWOTÄ TRANSAKCJI !\"\n            validationCost.style.display='block';\n            formCostInput.style= \"border-color:var(--validation-color);\";\n          }else if(costTrans === '.'){\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\n              validationName.style.display='none';\n              formNameInput.style= \"border-color:var(--border-color)\";\n            }\n            validationCost.innerHTML = \"PODAJ PRAWIDÅOWÄ KWOTÄ TRANSAKCJI !\"\n            validationCost.style.display='block';\n            formCostInput.style= \"border-color:var(--validation-color);\";\n          }\n\n        }else if(name.charAt(0,1) === ' '){\n          if(costTrans.length !== 0 && costTrans !== '.' ){\n            validationCost.style.display='none';\n            formCostInput.style= \"border-color:var(--border-color)\";\n          }else{\n            validationCost.style.display='block';\n            formCostInput.style= \"border-color:var(--validation-color);\";\n          }\n          validationName.innerHTML = \" NAZWA NIE MOÅ»E ZACZYNAÄ SIÄ OD SPACJI\";\n          validationName.style.display='block';\n          formNameInput.style= \"border-color:var(--validation-color);\";\n\n          if(costTrans.length === 0){\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\n              validationName.style.display='none';\n              formNameInput.style= \"border-color:var(--validation-color)\";\n            }\n            validationCost.innerHTML = \"PODAJ KWOTÄ TRANSAKCJI !\"\n            validationCost.style.display='block';\n            formCostInput.style= \"border-color:var(--validation-color);\";\n          }else if(costTrans === '.'){\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\n              validationName.style.display='none';\n              formNameInput.style= \"border-color:var(--border-color)\";\n            }\n            validationCost.innerHTML = \"PODAJ PRAWIDÅOWÄ KWOTÄ TRANSAKCJI !\"\n            validationCost.style.display='block';\n            formCostInput.style= \"border-color:var(--validation-color);\";\n          }\n\n        }else if(costTrans.length === 0){\n          if(name.length !== 0  && name.charAt(0,1) !== ' '){\n            validationName.style.display='none';\n            formNameInput.style= \"border-color:var(--validation-color)\";\n          }\n          validationCost.innerHTML = \"PODAJ KWOTÄ TRANSAKCJI !\"\n          validationCost.style.display='block';\n          formCostInput.style= \"border-color:var(--validation-color);\";\n        }else if(costTrans === '.'){\n          if(name.length !== 0  && name.charAt(0,1) !== ' '){\n            validationName.style.display='none';\n            formNameInput.style= \"border-color:var(--border-color)\";\n          }\n          validationCost.innerHTML = \"PODAJ PRAWIDÅOWÄ KWOTÄ TRANSAKCJI !\"\n          validationCost.style.display='block';\n          formCostInput.style= \"border-color:var(--validation-color);\";\n        }else{\n          const obj ={\n            name,\n            costTrans\n          }\n          this.state.listTrans.push(obj)\n          this.setState({\n            listTrans: this.state.listTrans,\n            actualValueInputCost: ''\n          })\n         const done_trans = document.querySelector(\"#Done__Transaction\")\n          done_trans.style.display =\"block\";\n          formNameInput.style= \"border-color:var(--done-color)\";\n          formCostInput.style= \"border-color:var(--done-color)\";\n          formNameInput.value = \"\";\n          validationCost.style.display='none';\n          validationName.style.display='none';\n          setTimeout(this.finishDoneForm,1500,done_trans,formNameInput,formCostInput)\n        }  \n  }\n\n  finishDoneForm = (done_trans,formNameInput,formCostInput) =>{\n    done_trans.style.display =\"none\";\n    formNameInput.style= \"border-color:var(--border-color)\";\n    formCostInput.style= \"border-color:var(--border-color)\";\n  }\n\n  delOneTrans = (index) =>{\n    this.state.listTrans.splice(index, 1)\n    this.setState({\n      listTrans: this.state.listTrans\n    }) \n  }\n\n  delAllTrans = () =>{\n    this.setState({\n      listTrans: []\n    })\n  }\n \n\n  changeValueInput = (numb,e) =>{\n    let actualValueInput = e.currentTarget.value;\n    let reg = 0;\n    if(numb=== 1){\n       reg = /^(([0-9]{0,2})(\\.[0-9]{0,4})?$)/;\n    }else if(numb=== 2){\n       reg = /^(([0-9]{0,6})(\\.[0-9]{0,4})?$)/;\n    }\n    if (actualValueInput.match(reg) != null) {\n      actualValueInput = actualValueInput.match(reg)[0]\n      if(numb === 1){\n        this.setState({\n          actualValueInputValute: actualValueInput \n        })\n      }else if(numb === 2){\n        this.setState({\n          actualValueInputCost: actualValueInput \n        })\n      }\n    }\n  }\n\n  changeValute = () =>{\n    const newValuteValue = document.querySelector('#ValuteValue').value;\n    const validation = document.querySelector('.Valute__Validation');\n    const valuteValueInput  = document.querySelector('#ValuteValue');\n    if(newValuteValue > 0){\n      if(parseFloat(newValuteValue) !== parseFloat(this.state.valute)){\n        this.setState({\n          valute: parseFloat(newValuteValue),\n          actualValueInputValute: ''\n        })\n        validation.innerHTML = 'POMYÅLNIE ZMIENIONO WALUTÄ !'\n        validation.style.display='block';\n        validation.style.color='var(--done-color)';\n        valuteValueInput.style= \"border-color:var(--done-color)\";\n        setTimeout(this.addDone,1500,valuteValueInput,validation)\n      }else{\n        validation.innerHTML = 'PODAJ INNÄ WARTOÅÄ OD AKTUALNEJ !'\n        validation.style.display='block';\n        valuteValueInput.style= \"border-color:var(--validation-color)\";\n      }\n    }else{\n      if(newValuteValue === '.'){\n        validation.innerHTML = 'WPISZ PRAWIDÅOWÄ WARTOÅÄ WALUTY !'\n        validation.style.display='block';\n        valuteValueInput.style= \"border-color:var(--validation-color)\";\n      }else{\n        validation.innerHTML = 'PODAJ WARTOÅÄ WALUTY !'\n        validation.style.display='block';\n        valuteValueInput.style= \"border-color:var(--validation-color)\";\n      }\n\n    }\n\n  }\n\n  addDone = (e,validation) =>{\n        validation.style.display='none';\n        validation.style.color='var(--validation-color)';\n        e.style= \"border-color:var(--border-color)\";\n        e.value = \"\";\n  }\n\n  backValute = () =>{\n    this.setState({\n      valute: this.state.defValute\n    })\n  }\n  render(){\n    return (\n      <div className=\"App_body\">\n      <Valute changeValute={this.changeValute} actualValueInput={this.state.actualValueInputValute} backValute={this.backValute} changeValueInput={this.changeValueInput.bind(this)} actualyValute={this.state.valute} defValute={this.state.defValute}/>\n      <TransactionForm actualValueInput={this.state.actualValueInputCost} changeValueInput={this.changeValueInput.bind(this)} addTrans={this.addTrans.bind(this)}/>\n      <TransactionList delAllTrans={this.delAllTrans} delOneTrans={this.delOneTrans} actualyValute={this.state.valute} listTrans={this.state.listTrans} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}