{"version":3,"sources":["components/TransactionList.js","components/TransactionForm.js","components/Currency.js","components/App.js","serviceWorker.js","index.js"],"names":["TransactionList","props","sumTrans","parseFloat","maxTrans","maxTransName","className","listTrans","map","event","index","costTrans","name","length","toFixed","currentCurrency","plnCost","key","onClick","delOneTrans","delAllTrans","TransactionForm","onSubmit","addTrans","bind","id","maxLength","type","placeholder","value","currentValueInputCost","onChange","changeValueInput","Currency","defCurrency","href","backCurrency","currentValueInput","changeCurrency","App","e","preventDefault","currentTarget","Form_Name","Form_Cost","validationName","document","querySelector","validationCost","formNameInput","formCostInput","success_trans","finishSuccessForm","style","visibility","innerHTML","charAt","obj","state","push","console","log","localStorage","setItem","JSON","stringify","setState","idItemList","setTimeout","splice","numb","reg","match","currentValueInputCurrency","newCurrencyValue","validation","currencyValueInput","addSuccess","currency","color","getItem","this","parse","axios","get","then","res","data","rates","mid","catch","src","alt","React","Component","Boolean","window","location","hostname","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee102f33.chunk.js","sourcesContent":["import React from 'react';\r\nimport './style/TransactionList.css';\r\n\r\nconst  TransactionList = (props) => {\r\n  let sumTrans = 0;\r\n  sumTrans = parseFloat(sumTrans);\r\n  let maxTrans = 0;\r\n  maxTrans = parseFloat(maxTrans);\r\n  let maxTransName = \"BRAK TRANSAKCJI\";\r\n  return (\r\n    <div className=\"TransactionList\">\r\n      <span> NAJWYÅ»SZA AKTUALNA TRANSAKCJA:</span><br/>\r\n      <div className=\"highestTrans\">\r\n      {props.listTrans.map((event,index) =>{\r\n        if(parseFloat(event.costTrans) > maxTrans){\r\n          maxTrans = event.costTrans\r\n          maxTransName= event.name\r\n        }\r\n        return(null)\r\n      })} \r\n     { (props.listTrans.length >0) ?\r\n           <table className=\"TableOneItem\">\r\n           <tbody>\r\n             <tr>\r\n               <th className=\"TableOneItem__Title highestTrans_NameTitle\">NAZWA</th>\r\n               <th className=\"TableOneItem__Title highestTrans_EURTitle\"> KWOTA EUR</th>\r\n               <th className=\"TableOneItem__Title highestTrans_PLNTitle\"> KWOTA PLN</th>\r\n             </tr>\r\n             <tr>\r\n               <td className=\"TableOneItem__Value highestTrans_Name\">{maxTransName}</td>\r\n               <td className=\"TableOneItem__Value highestTrans_EUR\"> {parseFloat(maxTrans).toFixed(2)}</td>\r\n               <td className=\"TableOneItem__Value highestTrans_PLN\"> {(parseFloat(maxTrans)*props.currentCurrency).toFixed(2)}</td>\r\n             </tr>\r\n           </tbody>\r\n         </table>:\r\n         <span> BRAK TRANSAKCJI</span>\r\n     }\r\n      </div>  \r\n       \r\n      <span>LISTA TRANSAKCJI:</span>  \r\n      <div className=\"TransactionList_ValueBox\">  \r\n        <table className=\"TableOneItem\">\r\n          <tbody>\r\n              <tr className=\"TableOneItem__AllTitle\">\r\n                <th className=\"TableOneItem__Title TableOneItem__TitleName\">NAZWA</th>\r\n                <th className=\"TableOneItem__Title TableOneItem__TitleCost\">KWOTA EUR</th>\r\n                <th className=\"TableOneItem__Title TableOneItem__TitleCost\">KWOTA PLN</th>\r\n                <th className=\"TableOneItem__Title TableOneItem__TitleDel\"> USUÅ </th>\r\n              </tr>\r\n            {props.listTrans.map((event,index) =>{\r\n              sumTrans = sumTrans + parseFloat(event.costTrans)\r\n              let plnCost = parseFloat(event.costTrans)*props.currentCurrency;\r\n              plnCost = plnCost.toFixed(2)\r\n              event.costTrans= parseFloat(event.costTrans).toFixed(2)\r\n              return(\r\n                <tr key={index}>\r\n                <td className=\"TableOneItem__Value TableOneItem__Name\">{event.name}</td>\r\n                <td className=\"TableOneItem__Value TableOneItem__CostEUR\"> {event.costTrans}</td>\r\n                <td className=\"TableOneItem__Value TableOneItem__CostPLN\">{plnCost}</td>\r\n                <td className=\"TableOneItem__Value\"><button className=\"TableOneItem__Delete\" onClick={()=>{props.delOneTrans(index)}}>USUÅ</button></td>\r\n                </tr>\r\n              )})}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n      <div className=\"Sum__Box\">\r\n      <span> SUMA TRANSAKCJI:</span>\r\n      <div className=\"Sum_TableBox\"> \r\n        <table className=\"Sum_Table\">\r\n          <tbody>\r\n            <tr>\r\n                <th className=\"TableOneItem__Title TitleSum__Title\">SUMA W EUR</th>\r\n                <th className=\"TableOneItem__Title TitleSum__Title\">SUMA W PLN</th>\r\n                <th className=\"TableOneItem__Title TitleDel__Title\">USUÅ WSZYSTKO </th>\r\n              </tr>     \r\n              <tr>\r\n                <td className=\"Sum__Trans\">{sumTrans.toFixed(2)}</td>\r\n                <td className=\"Sum__Trans\">{(sumTrans*props.currentCurrency).toFixed(2)}</td>\r\n               <td><button className=\"Button__DeleteAll\" onClick={props.delAllTrans}>USUÅ</button></td> \r\n              </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionList;\r\n","import React from 'react';\r\nimport './style/TransactionForm.css';\r\n\r\n\r\nconst  TransactionForm = (props) => {\r\n  return (\r\n    <div className=\"TransactionForm\">\r\n      <div className=\"TransactionForm__Body\">\r\n     <p className=\"TransactionForm__Title\">DODAJ TRANSAKCJE:</p>\r\n     <div className=\"TransactionForm__Box\">\r\n      <form onSubmit={props.addTrans.bind(this)} className=\"TransactionForm__Form\">\r\n          <div className=\"TransactionForm__NameBox\">\r\n            <span className=\"TransactionForm__Spans\">Nazwa transakcji:</span>\r\n            <input id=\"Form_Name\" className=\"TransactionForm__Name TransactionForm__Inputs\" maxLength=\"25\" type=\"text\" placeholder=\"opÅata za...\"/>\r\n            <div className=\"TransactionForm__NameValidation\">\r\n                <span className=\"Validation TransactionForm__NameValidationSpan\">PODAJ NAZWÄ TRANSAKCJI !!</span>\r\n              </div>\r\n          </div>\r\n        <div className=\"TransactionForm__CostBox\">\r\n        <label className=\"TransactionForm__Spans\">Kwota transakcji: </label>\r\n        <input id=\"Form_Cost\" className=\"TransactionForm__Cost TransactionForm__Inputs\" placeholder=\"00.00 EUR\" value={props.currentValueInputCost} onChange={props.changeValueInput.bind(this,2)}/>\r\n        <div className=\"TransactionForm__CostValidation\">\r\n            <div className=\" Validation TransactionForm__CostValidationSpan\">PODAJ KWOTE TRANSAKCJI !!</div>\r\n          </div>\r\n        </div> \r\n        <div>\r\n        <div id=\"Success__Transaction\" className=\"Validation__Success\">POMYÅLNIE DODANO TRANSAKCJE !</div>  \r\n        </div>\r\n        <input className=\"TransactionForm__Button TransactionForm__Inputs\" type=\"submit\"  value=\"Dodaj transakcje\"/>\r\n      </form>\r\n     </div>\r\n     </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default TransactionForm;\r\n","import React from 'react';\r\nimport './style/Currency.css';\r\n\r\nconst  Currency = (props) => {\r\n  return (\r\n    <>\r\n    <div className=\"Currency__BankCurrency\">\r\n    <p className=\"Currency__CurrentCurrency\"> AKTUALNY  KURS EURO WYNOSI : 1 EUR =  {props.currentCurrency.toFixed(2)} PLN</p>\r\n    <p className=\"Currency_BankCurrencyValue\"> ( aktualny kurs wedÅug  NBP wynosi 1 EUR = {props.defCurrency.toFixed(2)} PLN) <button className=\"Back_defCurrency\" href=\"\"  onClick={props.backCurrency}>przywrÃ³Ä ten kurs</button></p>\r\n    </div>\r\n    <div className=\"Currency\">\r\n        <p className=\"Currency__Form\"> ZMIEÅ KURS EURO</p>\r\n        <div className=\"Currency__Box\">\r\n          <div className=\"Currency__CurrentCurrency\">\r\n            <span>1 EUR =</span>\r\n            <input id=\"CurrencyValue\" value={props.currentValueInput} onChange={props.changeValueInput.bind(this,1)} placeholder={props.currentCurrency.toFixed(2)} /> \r\n            <span>PLN</span>\r\n          </div>\r\n          <div className=\"Currency__ValidationBox\">\r\n            <span className=\"Currency__Validation Validation\"> PODAJ WARTOSC WALUTY !!</span>\r\n          </div>\r\n          <div className=\"Currency__ButtonBox\">\r\n            <input type=\"button\" onClick={props.changeCurrency} className=\"Currency__ButtonChange\" value=\"zmieÅ walute\"/> \r\n          </div>\r\n        </div>\r\n    </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Currency;\r\n","import React from 'react';\r\nimport './style/App.css';\r\nimport TransactionList from './TransactionList';\r\nimport TransactionForm from './TransactionForm';\r\nimport Currency from './Currency';\r\nimport axios from \"axios\";\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super();\r\n    this.state ={\r\n      currency: 1,\r\n      defCurrency: 0,\r\n      listTrans: [],\r\n      currentValueInputCurrency: '',\r\n      currentValueInputCost: '',\r\n    }\r\n}\r\n\r\n  componentDidMount(){\r\n    if(!localStorage.getItem('myTransaction')){\r\n      localStorage.setItem('myTransaction' , '[]')\r\n    }else{\r\n      this.setState({\r\n        listTrans:JSON.parse(localStorage.getItem('myTransaction'))\r\n       }) \r\n      }\r\n\r\n    axios.get('http://api.nbp.pl/api/exchangerates/rates/A/EUR/').then(\r\n          (res)=>{\r\n            this.setState({\r\n              defCurrency: parseFloat(res.data.rates[0].mid),\r\n              currency: parseFloat(res.data.rates[0].mid)\r\n            })\r\n            const loader = document.querySelector('.Loader-Background');\r\n            loader.style.visibility=\"hidden\";\r\n          }).catch(()=>{\r\n            console.log(\"Problem z pobaniem danych\");\r\n          })\r\n          \r\n  }\r\n\r\n  addTrans = (e) => {\r\n      e.preventDefault() \r\n      const name = e.currentTarget.Form_Name.value;\r\n      const costTrans = e.currentTarget.Form_Cost.value;\r\n      const validationName = document.querySelector('.TransactionForm__NameValidationSpan');\r\n      const validationCost = document.querySelector('.TransactionForm__CostValidationSpan');\r\n      const formNameInput = document.querySelector('#Form_Name');\r\n      const formCostInput = document.querySelector('#Form_Cost');\r\n      const success_trans = document.querySelector(\"#Success__Transaction\");\r\n      this.finishSuccessForm(success_trans,formNameInput,formCostInput)\r\n        if(name.length === 0){\r\n          if(costTrans.length !== 0 && costTrans !== '.' ){\r\n            validationCost.style.visibility='hidden';\r\n            formCostInput.style= \"border-color:var(--border-color)\";\r\n          }else{\r\n            validationCost.style.visibility='visible';\r\n            formCostInput.style= \"border-color:var(--validation-color);\";\r\n          }\r\n          validationName.innerHTML = \" PODAJ NAZWÄ TRANSAKCJI\";\r\n          validationName.style.visibility='visible';\r\n          formNameInput.style= \"border-color:var(--validation-color);\";\r\n          \r\n          if(costTrans.length === 0){\r\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\r\n              validationName.style.visibility='hidden';\r\n              formNameInput.style= \"border-color:var(--validation-color)\";\r\n            }\r\n            validationCost.innerHTML = \"PODAJ KWOTÄ TRANSAKCJI !\"\r\n            validationCost.style.visibility='visible';\r\n            formCostInput.style= \"border-color:var(--validation-color);\";\r\n          }else if(costTrans === '.'){\r\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\r\n              validationName.style.visibility='hidden';\r\n              formNameInput.style= \"border-color:var(--border-color)\";\r\n            }\r\n            validationCost.innerHTML = \"PODAJ PRAWIDÅOWÄ KWOTÄ TRANSAKCJI !\"\r\n            validationCost.style.visibility='visible';\r\n            formCostInput.style= \"border-color:var(--validation-color);\";\r\n          }\r\n\r\n        }else if(name.charAt(0,1) === ' '){\r\n          if(costTrans.length !== 0 && costTrans !== '.' ){\r\n            validationCost.style.visibility='hidden';\r\n            formCostInput.style= \"border-color:var(--border-color)\";\r\n          }else{\r\n            validationCost.style.visibility='visible';\r\n            formCostInput.style= \"border-color:var(--validation-color);\";\r\n          }\r\n          validationName.innerHTML = \" NAZWA NIE MOÅ»E ZACZYNAÄ SIÄ OD SPACJI\";\r\n          validationName.style.visibility='visible';\r\n          formNameInput.style= \"border-color:var(--validation-color);\";\r\n\r\n          if(costTrans.length === 0){\r\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\r\n              validationName.style.visibility='hidden';\r\n              formNameInput.style= \"border-color:var(--validation-color)\";\r\n            }\r\n            validationCost.innerHTML = \"PODAJ KWOTÄ TRANSAKCJI !\"\r\n            validationCost.style.visibility='visible';\r\n            formCostInput.style= \"border-color:var(--validation-color);\";\r\n          }else if(costTrans === '.'){\r\n            if(name.length !== 0  && name.charAt(0,1) !== ' '){\r\n              validationName.style.visibility='hidden';\r\n              formNameInput.style= \"border-color:var(--border-color)\";\r\n            }\r\n            validationCost.innerHTML = \"PODAJ PRAWIDÅOWÄ KWOTÄ TRANSAKCJI !\"\r\n            validationCost.style.visibility='visible';\r\n            formCostInput.style= \"border-color:var(--validation-color);\";\r\n          }\r\n\r\n        }else if(costTrans.length === 0){\r\n          if(name.length !== 0  && name.charAt(0,1) !== ' '){\r\n            validationName.style.visibility='hidden';\r\n            formNameInput.style= \"border-color:var(--border-color)\";\r\n          }\r\n          validationCost.innerHTML = \"PODAJ KWOTÄ TRANSAKCJI !\"\r\n          validationCost.style.visibility='visible';\r\n          formCostInput.style= \"border-color:var(--validation-color);\";\r\n        }else if(costTrans === '.'){\r\n          if(name.length !== 0  && name.charAt(0,1) !== ' '){\r\n            validationName.style.visibility='hidden';\r\n            formNameInput.style= \"border-color:var(--border-color)\";\r\n          }\r\n          validationCost.innerHTML = \"PODAJ PRAWIDÅOWÄ KWOTÄ TRANSAKCJI !\"\r\n          validationCost.style.visibility='visible';\r\n          formCostInput.style= \"border-color:var(--validation-color);\";\r\n        }else{\r\n          const obj ={\r\n            name,\r\n            costTrans\r\n          }\r\n          this.state.listTrans.push(obj)\r\n          console.log(this.state.listTrans)\r\n          localStorage.setItem(\"myTransaction\", JSON.stringify(this.state.listTrans))\r\n          this.setState({\r\n            listTrans: this.state.listTrans,\r\n            idItemList: this.state.idItemList+1,\r\n            currentValueInputCost: ''\r\n          })\r\n          success_trans.style.visibility =\"visible\";\r\n          formNameInput.style= \"border-color:var(--success-color)\";\r\n          formCostInput.style= \"border-color:var(--success-color)\";\r\n          formNameInput.value = \"\";\r\n          validationCost.style.visibility='hidden';\r\n          validationName.style.visibility='hidden';\r\n          setTimeout(this.finishSuccessForm,1500,success_trans,formNameInput,formCostInput)\r\n        }  \r\n  }\r\n\r\n  finishSuccessForm = (success_trans,formNameInput,formCostInput) =>{\r\n    success_trans.style.visibility =\"hidden\";\r\n    formNameInput.style= \"border-color:var(--border-color)\";\r\n    formCostInput.style= \"border-color:var(--border-color)\";\r\n  }\r\n\r\n  delOneTrans = (index) =>{\r\n    this.state.listTrans.splice(index, 1)\r\n    localStorage.setItem(\"myTransaction\", JSON.stringify(this.state.listTrans))\r\n    this.setState({\r\n      listTrans: this.state.listTrans\r\n    }) \r\n  }\r\n\r\n  delAllTrans = () =>{\r\n    this.setState({\r\n      listTrans: []\r\n    })\r\n    localStorage.setItem(\"myTransaction\", JSON.stringify([]))\r\n  }\r\n\r\n\r\n  changeValueInput = (numb,e) =>{\r\n    let currentValueInput = e.currentTarget.value;\r\n    let reg = 0;\r\n    if(numb=== 1){\r\n       reg = /^(([0-9]{0,3})(\\.[0-9]{0,2})?$)/;\r\n    }else if(numb=== 2){\r\n       reg = /^(([0-9]*)(\\.[0-9]{0,2})?$)/;\r\n    }\r\n    if (currentValueInput.match(reg) != null) {\r\n      currentValueInput = currentValueInput.match(reg)[0]\r\n      if(numb === 1){\r\n        this.setState({\r\n          currentValueInputCurrency: currentValueInput \r\n        })\r\n      }else if(numb === 2){\r\n        this.setState({\r\n          currentValueInputCost: currentValueInput \r\n        })\r\n      }\r\n    }\r\n  }\r\n\r\n  changeCurrency = () =>{\r\n    const newCurrencyValue = document.querySelector('#CurrencyValue').value;\r\n    const validation = document.querySelector('.Currency__Validation');\r\n    const currencyValueInput  = document.querySelector('#CurrencyValue');\r\n    this.addSuccess(currencyValueInput,validation);\r\n    if(newCurrencyValue > 0){\r\n      if(parseFloat(newCurrencyValue) !== parseFloat(this.state.currency)){\r\n        this.setState({\r\n          currency: parseFloat(newCurrencyValue),\r\n          currentValueInputCurrency: ''\r\n        })\r\n        validation.innerHTML = 'POMYÅLNIE ZMIENIONO WALUTÄ !'\r\n        validation.style.visibility='visible';\r\n        validation.style.color='var(--success-color)';\r\n        currencyValueInput.style= \"border-color:var(--success-color)\";\r\n        currencyValueInput.value = \"\";\r\n        setTimeout(this.addSuccess,1500,currencyValueInput,validation)\r\n      }else{\r\n        validation.innerHTML = 'PODAJ INNÄ WARTOÅÄ OD AKTUALNEJ !'\r\n        validation.style.visibility='visible';\r\n        currencyValueInput.style= \"border-color:var(--validation-color)\";\r\n      }\r\n    }else{\r\n      if(newCurrencyValue === '.'){\r\n        validation.innerHTML = 'WPISZ PRAWIDÅOWÄ WARTOÅÄ WALUTY !'\r\n        validation.style.visibility='visible';\r\n        currencyValueInput.style= \"border-color:var(--validation-color)\";\r\n      }else{\r\n        validation.innerHTML = 'PODAJ WARTOÅÄ WALUTY !'\r\n        validation.style.visibility='visible';\r\n        currencyValueInput.style= \"border-color:var(--validation-color)\";\r\n      }\r\n\r\n    }\r\n\r\n  }\r\n\r\n  addSuccess = (e,validation) =>{\r\n        validation.style.visibility='hidden';\r\n        validation.style.color='var(--validation-color)';\r\n        e.style= \"border-color:var(--border-color)\";\r\n        \r\n  }\r\n\r\n  backCurrency = () =>{\r\n    this.setState({\r\n      currency: this.state.defCurrency\r\n    })\r\n  }\r\n  render(){\r\n    return (\r\n      <div className=\"App_body\">\r\n        <div className=\"Loader-Background\">\r\n          <img className=\"Loader\" src='Loader.gif' alt=\"Loader\"/>\r\n        </div>\r\n      <Currency changeCurrency={this.changeCurrency} currentValueInput={this.state.currentValueInputCurrency} backCurrency={this.backCurrency} changeValueInput={this.changeValueInput.bind(this)} currentCurrency={this.state.currency} defCurrency={this.state.defCurrency}/>\r\n      <TransactionForm currentValueInputCost={this.state.currentValueInputCost} changeValueInput={this.changeValueInput.bind(this)} addTrans={this.addTrans.bind(this)}/>\r\n      {(this.state.listTrans.length > 0)?\r\n      <TransactionList delAllTrans={this.delAllTrans} delOneTrans={this.delOneTrans} currentCurrency={this.state.currency} listTrans={this.state.listTrans} />:\r\n      <p className=\"Empty_List\">AKTUALNIE NIE  DODANO Å»ADNEJ TRANSAKCJI</p>}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\nserviceWorker.unregister();\n"],"sourceRoot":""}